---
name: Check Rust code

on:
  push:
    branches:
      - master
      - "release/*"
  pull_request:
  workflow_dispatch:
  merge_group:

# If changing any of the commands, make the same changes to pre-push-check.sh!
jobs:
  build-and-test:
    name: Build and test Rust code (${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macOS]
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "rust-cache-${{ matrix.os }}"
      # same checks as with `cargo build`, but no binaries are generated at the end, saving some time.
      - run: cargo check --all-targets --all-features
      - run: cargo test
  check-format:
    name: Check formatting of Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy rustfmt
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "rust-cache-ubuntu"
      - run: cargo fmt -- --check
  check-lints:
    name: Run linter on Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "rust-cache-ubuntu"
      - run: cargo clippy --all-targets --all-features -- -D warnings
