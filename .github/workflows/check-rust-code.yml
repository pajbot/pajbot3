on: [push, pull_request]

name: Check Rust code

jobs:
  build-and-test:
    name: Build and test Rust code (${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ ubuntu, windows, macOS ]
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: hecrj/setup-rust-action@v1
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: v2-build-and-test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      # same checks as with `cargo build`, but no binaries are generated at the end, saving some time.
      - run: cargo check --all-targets --all-features
      - run: cargo test
  check-format:
    name: Check formatting of Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: rustfmt
      - run: cargo fmt -- --check
  check-lints:
    name: Run linter on Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: clippy
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: v2-check-lints-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --all-targets --all-features -- -D warnings
